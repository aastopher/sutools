# name: Testing and Coverage
# on:
#   push:
#     branches:
#       - master
#   pull_request:
#     branches:
#       - master
# jobs:
#   build-and-test:
#     name: Build and Test
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Set up Python and tox
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.x'

#       - name: Set up Python 3.8
#         uses: actions/setup-python@v4
#         with:
#           python-version: 3.8

#       - name: Set up Python 3.9
#         uses: actions/setup-python@v4
#         with:
#           python-version: 3.9

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt
#       - name: Run tox tests
#         run: tox --parallel auto
#         env:
#           CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
#       - name: Upload coverage reports to Codecov
#         uses: codecov/codecov-action@v3
#         with:
#           fail_ci_if_error: true
#           token: ${{ secrets.CODECOV_TOKEN }}

name: Testing and Coverage
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python and tox
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tox tests
        run: |
          tox --parallel auto
          tox --listenvs | xargs -n1 -P$(nproc) -I% sh -c 'status=$(cat %/junit.xml | grep -Eo "failures=[\"']?[0-9]+" | grep -Eo "[0-9]+"); if [ "$status" == "0" ]; then shield=$(curl -s https://img.shields.io/badge/tox-%-passing-brightgreen.svg); else shield=$(curl -s https://img.shields.io/badge/tox-%-failing-red.svg); fi && echo $shield > %/badge.svg'

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
